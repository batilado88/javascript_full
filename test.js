'use strict';

// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∫–æ–¥?

// console.log( NaN || 2 || undefined ); // 2

// console.log( NaN && 2 && undefined ); // NaN

// console.log( 1 && 2 && 3 ); // 3

// console.log( !1 && 2 || !3 ); // false

// console.log( 25 || null && !3 ); // 25

// console.log( NaN || null || !3 || undefined || 5); // 5

// console.log( NaN || null && !3 && undefined || 5); // 5

// console.log( 5 === 5 && 3 > 1 || 5); // true


// –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —É—Å–ª–æ–≤–∏–µ?

// const hamburger = 3;
// const fries = 3;
// const cola = 0;
// const nuggets = 2;

// if (hamburger === 3 && cola || fries === 3 && nuggets) {
//     console.log('Done!')
// }

// console.log(hamburger === 3 && cola || fries === 3 && nuggets);


// –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —É—Å–ª–æ–≤–∏–µ?

// let hamburger;
// const fries = NaN;
// const cola = 0;
// const nuggets = 2;

// if (hamburger || cola || fries === 3 || nuggets) {
//     console.log('Done!');
// }

// console.log(hamburger || cola || fries === 3 || nuggets);

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è hamburger –∑–∞–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ let, —Ç–∞–∫ –∫–∞–∫ const –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç –∫–∞–∫–æ–µ-–ª–∏–±–æ –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –° const –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞, –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å.
// –ê –±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–∞–º undefined, –Ω–∞–ø–æ–º–∏–Ω–∞—é üôÇ

// –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —É—Å–ª–æ–≤–∏–µ?

// let hamburger;
// const fries = NaN;
// const cola = 0;
// const nuggets = 2;

// if (hamburger && cola || fries === 3 && nuggets) {
//     console.log('Done!')
// }

// console.log(hamburger && cola || fries === 3 && nuggets)



// *
// **
// ***
// ****
// *****
// ******

// let result = '';
// const length = 6;

// for (let i = 1; i <= length; i++) {

//     for (let j = 0; j < i; j++) {
//         result += '*';
//     }

//     result += '\n';
// }

// console.log(result);



// –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ —Ü–∏—Ñ—Ä–∞–º–∏ –æ—Ç 5 –¥–æ 10 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. 
// –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –º–æ–∂–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∏–º: arr[0]


// const arrayOfNumbers = [];

//     // –ü–∏—à–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–æ—Ç —Ç—É—Ç
//     for (let i = 0; i < 6; i++) {
//         arrayOfNumbers[i] = i + 5;
//     }

// console.log(arrayOfNumbers);



// const arr = [3, 5, 8, 16, 20, 23, 50];
// const result = [];

//     // –ü–∏—à–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–æ—Ç —Ç—É—Ç
//     for (let i = 0; i < arr.length; i++) {
//         result[i] = arr[i];
//     }

// console.log(result);




// const data = [5, 10, 'Shopping', 20, 'Homework'];

//     // –ü–∏—à–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–æ—Ç —Ç—É—Ç
//     for (let i = 0; i < data.length; i++) {
//         if (typeof(data[i]) === 'number') {
//             data[i] *= 2;
//         } else {
//             data[i] += ' - done';
//         }
//     }


// console.log(data);



// const data = [5, 10, 'Shopping', 20, 'Homework'];
//     const result = [];

//     // –ü–∏—à–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–æ—Ç —Ç—É—Ç
//     // let k = 0;
//     for (let i = 1; i <= data.length; i++) {
//         result[i - 1] = data[data.length - i];
//         // k++;
//     }

// console.log(result);




//      *
//     ***
//    *****
//   *******
//  *********
// ***********


// const lines = 5;
// let result = '';
// // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∏–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è result, —Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–æ–∫—É –≤ –Ω–µ–π

// for (let i = 0; i <= lines; i++) {

//     // for (let k = 0; k < lines - i; k++) {
//     //     result += ' ';
//     // }

//     for (let k = lines; k > i; k--) {
//         result += ' ';
//     }

//     for (let j = 0; j < 2 * i + 1; j++) {
//         result += '*';
//     }
//     result += '\n';
// }

// console.log(result);


// function getMathResult(num1, num2) {
//     let res = num1;
//     if (typeof(num2) !== 'number' || num2 <= 0) {
//         console.log('–£—Å–ª–æ–≤–∏–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ!');
//         return res;
//     } else {
//         for (let i = 1; i < num2; i++) {
//             res += '---';
//             res += (i + 1) * num1;
//             console.log(`–ó–Ω–∞—á–µ–Ω–∏–µ res —Ä–∞–≤–Ω–æ => ${res} `);
//         }
//         return res;
//     }
// }

// console.log(getMathResult(3, 1));




// 1

// function calculateVolumeAndArea(length) {
//     let vol = length * length * length,
//         sqr = 6 * length * length;
        
//     if (typeof(length) == 'number' && length > 0 && length % 1 == 0) {
//         return `–û–±—ä–µ–º –∫—É–±–∞: ${vol}, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: ${sqr}`;
//     } else {
//         return '–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞';
//     }
// }

// console.log(calculateVolumeAndArea(5));
// console.log(calculateVolumeAndArea('5'));
// console.log(calculateVolumeAndArea(-1));
// console.log(calculateVolumeAndArea(0));
// console.log(calculateVolumeAndArea(0.1));




// 2

// function getCoupeNumber(seat) {
    
//     if (typeof(seat) !== 'number' || seat < 0 || seat % 1 !== 0) {
//         return '–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞';
    
//     }   else if (seat == 0 || seat > 36) {
//         return '–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç';
    
//     }   else  {
//         return Math.ceil(seat / 4);
//     }
// }

// console.log(getCoupeNumber(0));
// console.log(getCoupeNumber(37));
// console.log(getCoupeNumber(5));
// console.log(getCoupeNumber(15));
// console.log(getCoupeNumber(36));




// function checkNum(number) {
//     if (number % 1 == 0) {
//         console.log('—Ü–µ–ª–æ–µ');
//     } else {
//         console.log('–Ω–µ —Ü–µ–ª–æ–µ');
//     }
// }

// checkNum(5);
// checkNum(7);
// checkNum(10);
// checkNum(0);
// checkNum(5.5);


// console.log(6 % 1);


// function getTimeFromMinutes(min) {
//     if ( !Number.isFinite(min) || !Number.isInteger(min) || min < 0) {
//         return '–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ';
//     } 

//     let resultHour = Math.floor(min / 60);
//     let resultMinute = min % 60;

//     let hourSign = '';

//     switch (resultHour) {
//         case 1:
//             hourSign = '—á–∞—Å';
//             break;
//         case 2: 
//         case 3: 
//         case 4: 
//             hourSign = '—á–∞—Å–∞';
//             break;
//         default: 
//             hourSign = '—á–∞—Å–æ–≤';
//             break;
//     }

//     return `–≠—Ç–æ ${resultHour} ${hourSign} –∏ ${resultMinute} –º–∏–Ω—É—Ç`;
// }

// console.log(getTimeFromMinutes(55));
// console.log(getTimeFromMinutes(125));
// console.log(getTimeFromMinutes(199));
// console.log(getTimeFromMinutes(555));

// console.log(getTimeFromMinutes(-55));
// console.log(getTimeFromMinutes(0));
// console.log(getTimeFromMinutes(55.5));



// function findMaxNumber(num1, num2, num3, num4) {
//     if (!Number.isFinite(num1) || !Number.isFinite(num2) || !Number.isFinite(num3) || !Number.isFinite(num4)) {
//         return 0;
//     } else {
//         // let arr = [num1, num2, num3, num4];
//         // for (let i = 0; i < 4; i++) {
//         //     if (arr[i] > arr[i+1]) {
//         //         arr[i+1] = arr[i];
//         //     }
//         // }
//         // console.log(arr);
//         // return arr[3];
//         return Math.max(num1, num2, num3, num4);
//     }
// }


// console.log(findMaxNumber(43, 3, '-12', -5));
// console.log(findMaxNumber(1, 5, 6.6, 11));
// console.log(findMaxNumber(1, 5, '6', '10'));




// function fib(num) {
//     if ( typeof(num) !== 'number' && num <= 0 && !Number.isInteger(num) ) {
//         return '';
//     }
    
    
//     if (num == 1) {
//             return '0';
//     } else if (num == 2) {
//             return '0 1';
//     } else {
//             let arr = [0, 1];

//             for (let i = 2; i < num; i++) {
//                 arr[i] = arr[i - 1] + arr[i - 2];
//                 // console.log(arr);
//             }
//             return arr.join(' ');
//     }
// }

// console.log(fib(0));
// console.log(fib(1));
// fib(1);
// fib(2);
// fib(3);
// fib(4);
// fib(5);
// fib(10);

// console.log(fib('55'));
// console.log(fib('string'));
// console.log(fib(null));
// console.log(fib(NaN));
// console.log(fib('5'));
// console.log(fib(0));
// console.log(fib(-5));
// console.log(fib('hello'));


// let obj = {
//     name: 'Jonh',
//     age: 35,
//     isMarried: true,
//     phone: 329549
// };

// let keysCount = Object.keys(obj);
// console.log(keysCount.length);




// const personalPlanPeter = {
//     name: 'Peter',
//     age: '29',
//     skills: {
//         languages: ['ru', 'eng'],
//         programmingLangs: {
//             js: '20%',
//             php: '10%'
//         },
//         exp: '1 month'
//     }
// };

// function showExperience(plan) {
//     let {exp} = plan['skills'];
//     return exp;
// }

// function showProgrammingLangs(plan) {
//     let {programmingLangs} = plan['skills'];

//     let result = '';

//     if (Object.keys(programmingLangs).length === 0) {
//         return result;
//     }

//     for (let key in programmingLangs) {
//         console.log(`–∑–Ω–∞—á–µ–Ω–∏–µ key —è–≤–ª—è–µ—Ç—Å—è ${key}`);    
//         result += `–Ø–∑—ã–∫ ${key} –∏–∑—É—á–µ–Ω –Ω–∞ ${programmingLangs[key]}\n`;
//     }

//     return result;
// }

// // showExperience(personalPlanPeter);
// // console.log(showProgrammingLangs(personalPlanPeter));

// personalPlanPeter.showAgeAndLangs = function(plan) {
//     let {age, skills: {languages}} = plan;

//     return `–ú–Ω–µ ${age}, –∏ —è –≤–ª–∞–¥–µ—é —è–∑—ã–∫–∞–º–∏: ${languages.join(' ').toUpperCase()}`;
// };

// personalPlanPeter.showAgeAndLangs(personalPlanPeter);



// const family = ['Peter', 'Ann', 'Alex', 'Linda'];

// function showFamily(arr) {
//     if (arr.length === 0) {
//         return '–°–µ–º—å—è –ø—É—Å—Ç–∞';
//     }
//     return `–°–µ–º—å—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑: ${arr.join(' ')}`;
// }

// const favoriteCities = ['liSBon', 'ROME', 'miLan', 'Dublin'];

// function standardizeStrings(arr) {
//     for (let i = 0; i < arr.length; i++) {
//         console.log(arr[i].toLowerCase());
//     }
// }


// console.log(showFamily(family));
// standardizeStrings(favoriteCities);


// const someString = 'This is some strange string';

// function reverse(str) {
//     if (typeof(str) !== 'string') {
//         console.log('–û—à–∏–±–∫–∞');
//         return '–û—à–∏–±–∫–∞!';
//     }
    
//     let newString = [];
//     for (let i = 0; i < str.length; i++) {
//         newString[i] = str[str.length - i - 1];
//     }
//     return newString.join('');
// }

// console.log(reverse(someString));



// const baseCurrencies = ['USD', 'EUR'];
// const additionalCurrencies = ['UAH', 'RUB', 'CNY'];

// function availableCurr(arr, missingCurr) {
//     if (arr.length === 0) {
//         return '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç';
//     }
    
//     let result = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:\n';
//     for (let i = 0; i < arr.length; i++) {
//         if (arr[i] == missingCurr) continue;
//         result += `${arr[i]}\n`;
//     }
//     return result;
// }

// console.log(availableCurr([...baseCurrencies, ...additionalCurrencies], 'USD'));



// const shoppingMallData = {
//     shops: [
//         {
//             width: 10,
//             length: 5
//         },
//         {
//             width: 15,
//             length: 7
//         },
//         {
//             width: 20,
//             length: 5
//         },
//         {
//             width: 8,
//             length: 10
//         }
//     ],
//     height: 5,
//     moneyPer1m3: 30,
//     budget: 50000
// };

// function isBudgetEnough(data) {
    
//     let area = 0;
//     data.shops.forEach(function(item, i) {
//         let {width, length} = data.shops[i];
//         area += (width * length);
//     });
//     let volume = area * data['height'];

//     let needBudget = volume * data['moneyPer1m3'];

//     if (needBudget <= data['budget']) {
//         return '–ë—é–¥–∂–µ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ';
//     } else {
//         return '–ë—é–¥–∂–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ';
//     }
    
// }

// console.log(isBudgetEnough(shoppingMallData));


// const students = ['Peter', 'Andrew', 'Ann', 'Mark', 'Josh', 'Sandra', 'Cris', 'Bernard', 'Takesi', 'Sam', 'Obama', 'Baiden'];

// function sortStudentsByGroups(arr) {
//     arr.sort();
//     let a = [],
//         b = [],
//         c = [],
//         rest = [];
//     for (let i = 0; i < arr.length; i++) {
//         if (i < 3) {
//             a.push(arr[i]);
//         } else if (i < 6) {
//             b.push(arr[i]);
//         } else if (i < 9) {
//             c.push(arr[i]);
//         } else  {
//             rest.push(arr[i]);
//         } 
//     }

//     return [a, b, c, `–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: ${rest.length === 0 ? '-' : rest.join(', ')}`];

// }

// console.log(sortStudentsByGroups(students));


// console.log(typeof(parseInt('15px', 10)));
// console.log(parseInt('15px', 10));

// console.log(typeof(Boolean('4')));
// console.log(Boolean('null'));

// console.log(Number('null'));

// console.log(typeof(!!'44444'));
// console.log(!!+'dd');

// let arr = [0, 1, 2, 3, 4, 5];
// arr.join(' '));


// function createCounter() {
//     let counter = 0;

//     const myFunction = function() {
//         counter = counter + 1;
//         return counter;
//     };

//     return myFunction;
// }

// const increment = createCounter();
// const c1 = increment();debugger;
// const c2 = increment();debugger;
// const c3 = increment();debugger;

// console.log(c1, c2, c3);



// function createCounter() {
//     // let counter = 0;
//     const myFunction = function() {
//         counter = counter + 1;
//         return counter;
//     };
//     // counter = 100;
//     return myFunction;
//     }
//     const increment = createCounter();
//     // counter = 5;
//     let counter = 100;
//     const c1 = increment();
//     const c2 = increment();
//     counter = 777;
//     const c3 = increment();
//     console.log('example increment', c1, c2, c3);

// let a = 10;

// let b = 30;
// c = 50;

// console.log(a + b + c);


// let x = 1;

// function func() {
//   console.log(x); // ?

//   let x = 2;
// }

// func();


// function makeArmy() {
//     let shooters = [];
  
//    for (let i = 0; i < 10; i++) {
//       let shooter = function() { // —Ñ—É–Ω–∫—Ü–∏—è shooter
//         console.log( i ); // –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä
//       };
//       shooters.push(shooter); // –∏ –¥–æ–±–∞–≤–ª—è—Ç—å —Å—Ç—Ä–µ–ª–∫–∞ –≤ –º–∞—Å—Å–∏–≤
//     }
  
//     // ...–∞ –≤ –∫–æ–Ω—Ü–µ –≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤ –∏–∑ –≤—Å–µ—Ö —Å—Ç—Ä–µ–ª–∫–æ–≤
//     return shooters;
//   }
  
//   let army = makeArmy();
  
//   // –≤—Å–µ —Å—Ç—Ä–µ–ª–∫–∏ –≤—ã–≤–æ–¥—è—Ç 10 –≤–º–µ—Å—Ç–æ –∏—Ö –ø–æ—Ä—è–¥–∫–æ–≤—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ (0, 1, 2, 3...)
//   army[0](); // 10 –æ—Ç —Å—Ç—Ä–µ–ª–∫–∞ —Å –ø–æ—Ä—è–¥–∫–æ–≤—ã–º –Ω–æ–º–µ—Ä–æ–º 0
//   army[1](); // 10 –æ—Ç —Å—Ç—Ä–µ–ª–∫–∞ —Å –ø–æ—Ä—è–¥–∫–æ–≤—ã–º –Ω–æ–º–µ—Ä–æ–º 1
//   army[2](); // 10 ...–∏ —Ç.–¥.



// console.log('b' > 'a');