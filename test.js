'use strict';

// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∫–æ–¥?

// console.log( NaN || 2 || undefined ); // 2

// console.log( NaN && 2 && undefined ); // NaN

// console.log( 1 && 2 && 3 ); // 3

// console.log( !1 && 2 || !3 ); // false

// console.log( 25 || null && !3 ); // 25

// console.log( NaN || null || !3 || undefined || 5); // 5

// console.log( NaN || null && !3 && undefined || 5); // 5

// console.log( 5 === 5 && 3 > 1 || 5); // true


// –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —É—Å–ª–æ–≤–∏–µ?

// const hamburger = 3;
// const fries = 3;
// const cola = 0;
// const nuggets = 2;

// if (hamburger === 3 && cola || fries === 3 && nuggets) {
//     console.log('Done!')
// }

// console.log(hamburger === 3 && cola || fries === 3 && nuggets);


// –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —É—Å–ª–æ–≤–∏–µ?

// let hamburger;
// const fries = NaN;
// const cola = 0;
// const nuggets = 2;

// if (hamburger || cola || fries === 3 || nuggets) {
//     console.log('Done!');
// }

// console.log(hamburger || cola || fries === 3 || nuggets);

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è hamburger –∑–∞–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ let, —Ç–∞–∫ –∫–∞–∫ const –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç –∫–∞–∫–æ–µ-–ª–∏–±–æ –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –° const –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞, –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å.
// –ê –±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–∞–º undefined, –Ω–∞–ø–æ–º–∏–Ω–∞—é üôÇ

// –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —É—Å–ª–æ–≤–∏–µ?

// let hamburger;
// const fries = NaN;
// const cola = 0;
// const nuggets = 2;

// if (hamburger && cola || fries === 3 && nuggets) {
//     console.log('Done!')
// }

// console.log(hamburger && cola || fries === 3 && nuggets)



// *
// **
// ***
// ****
// *****
// ******

// let result = '';
// const length = 6;

// for (let i = 1; i <= length; i++) {

//     for (let j = 0; j < i; j++) {
//         result += '*';
//     }

//     result += '\n';
// }

// console.log(result);



// –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ —Ü–∏—Ñ—Ä–∞–º–∏ –æ—Ç 5 –¥–æ 10 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. 
// –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –º–æ–∂–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∏–º: arr[0]


// const arrayOfNumbers = [];

//     // –ü–∏—à–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–æ—Ç —Ç—É—Ç
//     for (let i = 0; i < 6; i++) {
//         arrayOfNumbers[i] = i + 5;
//     }

// console.log(arrayOfNumbers);



// const arr = [3, 5, 8, 16, 20, 23, 50];
// const result = [];

//     // –ü–∏—à–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–æ—Ç —Ç—É—Ç
//     for (let i = 0; i < arr.length; i++) {
//         result[i] = arr[i];
//     }

// console.log(result);




// const data = [5, 10, 'Shopping', 20, 'Homework'];

//     // –ü–∏—à–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–æ—Ç —Ç—É—Ç
//     for (let i = 0; i < data.length; i++) {
//         if (typeof(data[i]) === 'number') {
//             data[i] *= 2;
//         } else {
//             data[i] += ' - done';
//         }
//     }


// console.log(data);



// const data = [5, 10, 'Shopping', 20, 'Homework'];
//     const result = [];

//     // –ü–∏—à–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–æ—Ç —Ç—É—Ç
//     // let k = 0;
//     for (let i = 1; i <= data.length; i++) {
//         result[i - 1] = data[data.length - i];
//         // k++;
//     }

// console.log(result);




//      *
//     ***
//    *****
//   *******
//  *********
// ***********


// const lines = 5;
// let result = '';
// // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∏–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è result, —Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–æ–∫—É –≤ –Ω–µ–π

// for (let i = 0; i <= lines; i++) {

//     // for (let k = 0; k < lines - i; k++) {
//     //     result += ' ';
//     // }

//     for (let k = lines; k > i; k--) {
//         result += ' ';
//     }

//     for (let j = 0; j < 2 * i + 1; j++) {
//         result += '*';
//     }
//     result += '\n';
// }

// console.log(result);